parameters:
- name: serviceConnection
  type: string
- name: testProjectDirectory
  type: string
- name: testProjectName
  type: string
- name: testfileDirectory
  type: string

steps:
- task: DeleteFiles@1
  displayName: 'Clean Build Directory'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
      **/bin/*
      **/obj/*
      **/TestResults/*
      **/drop/*
    RemoveSourceFolder: false

- task: PowerShell@2
  displayName: 'Copy Test Files'
  inputs:
    targetType: 'inline'
    script: |
      $sourcePath = "$(System.DefaultWorkingDirectory)/${{ parameters.testProjectDirectory }}/${{parameters.testfileDirectory}}"
      $targetPath = "$(Build.ArtifactStagingDirectory)/TestFiles"

      Write-Host "Source path: $sourcePath"
      Write-Host "Target path: $targetPath"

      # Check if the source directory exists
      if (!(Test-Path -Path $sourcePath)) {
        Write-Error "Source directory not found: $sourcePath"
        exit 1
      }

      # Create the target directory if it doesn't exist
      if (!(Test-Path -Path $targetPath)) {
        New-Item -ItemType Directory -Path $targetPath -Force
      }

      # Copy the files
      Copy-Item -Path "$sourcePath\*" -Destination $targetPath -Recurse -Force

      # Verify files were copied
      Write-Host "Files copied to target directory:"
      Get-ChildItem -Path $targetPath -Recurse | ForEach-Object { Write-Host $_.FullName }

- task: PublishBuildArtifacts@1
  displayName: 'Publish Test Files'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'TestFiles'
    publishLocation: 'Container'

- script: |
    export AZURE_IDENTITY_DISABLE_MANAGED_IDENTITY=true
  displayName: 'Export Identity Config'

- task: NodeTool@0
  displayName: 'Install Node.js'
  inputs:
    versionSpec: '22.x'

- script: |
    npm install
  displayName: 'Install npm dependencies'
  workingDirectory: '$(System.DefaultWorkingDirectory)/${{ parameters.testProjectDirectory }}'

- script: |
    echo "Current working directory:"
    pwd
    echo "Contents of the directory:"
    ls -la
    echo "Running tests..."
    npm test
  displayName: 'Run Tests'
  workingDirectory: '$(System.DefaultWorkingDirectory)/${{ parameters.testProjectDirectory }}'
  env:
    NODE_ENV: 'ci'
    CAASFOLDER_STORAGE_CONNECTION_STRING: $(CAASFOLDER_STORAGE_CONNECTION_STRING)
    DTOS_DATABASE_CONNECTION_STRING: $(DTOS_DATABASE_CONNECTION_STRING)
    MANAGED_IDENTITY_CLIENT_ID: $(MANAGED_IDENTITY_CLIENT_ID)

- task: PublishBuildArtifacts@1
  displayName: 'Publish Playwright Test Reports'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/${{ parameters.testProjectDirectory }}/src/config/playwright-report'
    ArtifactName: 'PlaywrightHTMLReport'
    publishLocation: 'Container'

# - task: PublishTestResults@2
#   displayName: 'Publish Test Results'
#   condition: succeededOrFailed()
#   inputs:
#     testResultsFormat: 'JUnit'
#     testResultsFiles: '$(System.DefaultWorkingDirectory)/${{ parameters.testProjectDirectory }}/src/config/playwright-report/results.xml'
#     searchFolder: '$(System.DefaultWorkingDirectory)/${{ parameters.testProjectDirectory }}/src/config/playwright-report'
#     testRunTitle: '${{ parameters.testProjectName }} Tests'
#     mergeTestResults: true
#     failTaskOnFailedTests: true
#     publishRunAttachments: true
