---

parameters:
- name: serviceConnection
  type: string

steps:
- task: AzureCLI@2
  name: debug_output
  displayName: 'Debug Output'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    addSpnToEnvironment: true
    failOnStandardError: false
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      # Output current Azure context
      az account show
      az group list --output table
      echo "Service connection"
      echo "Service connection is: ${{ parameters.serviceConnection }}"
      echo "Database connection string"
      echo "Database connection string is: $(DTOS_DATABASE_CONNECTION_STRING)"

- task: AzurePowerShell@5
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    ScriptType: 'InlineScript'
    Inline: |
      $token = (Get-AzAccessToken -ResourceUrl https://database.windows.net).Token
      $sqlConnection = New-Object System.Data.SqlClient.SqlConnection
      $sqlConnection.ConnectionString = "$(DTOS_DATABASE_CONNECTION_STRING)"
      $sqlConnection.AccessToken = $token
      $sqlConnection.Open()
      # Output SQL Connection State:
      Write-Host "SQL Connection State: $($sqlConnection.State)"
      # Execute SQL query and output results:
      $command = $sqlConnection.CreateCommand()
      $command.CommandText = "SELECT [name] from sys.database_principals where [type] = 'E' order by [name]"
      $reader = $command.ExecuteReader()
      while ($reader.Read()) {
          Write-Host "Name: $($reader["name"])"
      }
      $reader.Close()
      $sqlConnection.Close()
    azurePowerShellVersion: 'LatestVersion'

- task: UseDotNet@2
  displayName: 'Use .NET 9 SDK'
  inputs:
    packageType: 'sdk'
    version: '9.0.x'
    includePreviewVersions: true

- task: DeleteFiles@1
  displayName: 'Clean Build Directory'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
      **/bin/*
      **/obj/*
      **/TestResults/*
      **/drop/*
    RemoveSourceFolder: false

- task: FileTransform@1
  displayName: 'Transform Configuration Files'
  inputs:
    folderPath: '$(System.DefaultWorkingDirectory)/tests/smoke-tests/dtos-cohort-manager-smoke-tests/Config'
    fileType: 'json'
    targetFiles: '*.json'

- task: PowerShell@2
  displayName: 'Copy Test Files'
  inputs:
    targetType: 'inline'
    script: |
      $sourcePath = '$(System.DefaultWorkingDirectory)/tests/smoke-tests/dtos-cohort-manager-smoke-tests/TestFiles'
      $targetPath = '$(Build.ArtifactStagingDirectory)/TestFiles'

      # Check if the source directory exists
      if (!(Test-Path -Path $sourcePath)) {
        Write-Error "Source directory not found: $sourcePath"
        exit 1
      }

      # Create the target directory if it doesn't exist
      if (!(Test-Path -Path $targetPath)) {
        New-Item -ItemType Directory -Path $targetPath
      }

      # Copy the files
      Copy-Item -Path $sourcePath -Destination $targetPath -Recurse -Force

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'TestFiles'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'TestFiles'
    downloadPath: '$(System.DefaultWorkingDirectory)'

- task: DotNetCoreCLI@2
  displayName: 'Build Smoke Tests Solution'
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/tests/smoke-tests/dtos-cohort-manager-smoke-tests.sln'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: 'Run SpecFlow Tests'
  inputs:
    command: 'test'
    projects: '$(System.DefaultWorkingDirectory)/tests/smoke-tests/dtos-cohort-manager-smoke-tests/dtos-cohort-manager-smoke-tests.csproj'
    publishTestResults: true
    azureSubscription: sc-cohort-manager-nft

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/*.trx'
    testRunTitle: 'SpecFlow Tests'
    mergeTestResults: true
    createTestRun: true
    testResultFormat: VSTest
    azureSubscription: sc-cohort-manager-nft
