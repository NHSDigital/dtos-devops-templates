---

parameters:
  - name: tfApplyShell
    type: string
    default: bash
  - name: tfApplyScript
    type: string
    default: ''
  - name: tfPlanFilename
    type: string
    default: ''

steps:
  - task: Bash@3
    displayName: Get Terraform Plan Name
    inputs:
      targetType: 'inline'
      script: |
        planFile="${{ parameters.tfPlanFilename }}"
        if [ -z "$planFile" ]; then
          planFile="${ENVIRONMENT}.tfplan"
        fi
        echo "##vso[task.setvariable variable=PLAN_FILENAME]$planFile"

  - template: tf_init.yaml

  - task: DownloadBuildArtifacts@1
    displayName: Download plan
    inputs:
      buildType: current
      downloadType: single
      artifactName: $(TF_PLAN_ARTIFACT)
      downloadPath: $(TF_DIRECTORY)

  - task: AzureCLI@2
    displayName: Terraform Apply
    inputs:
      azureSubscription: $(SERVICE_CONNECTION)
      addSpnToEnvironment: true
      failOnStandardError: true
      scriptType: ${{ parameters.tfApplyShell }}
      scriptLocation: inlineScript
      workingDirectory: $(TF_DIRECTORY)
      inlineScript: |
        ${{ parameters.tfApplyScript }}
        terraform apply -auto-approve -input=false $(TF_PLAN_ARTIFACT)/$(PLAN_FILENAME)
